modulejs.define 'HBWTranslator', ['jQuery'], (jQuery) ->
  translations = <%= I18n.t('hbw.js').to_json %>

  translate: (key, vars = {}) ->
    current = translations

    for part in key.split('.')
      if jQuery.isPlainObject(current) and part of current
        current = @interpolateString(current[part], vars)
      else
        throw new Error('Cannot find ' + key + ' in translations')

    current

  interpolateString: (str, vars) ->
    if typeof str == 'string'
      str.replace(/%{([^{}]*)}/g, (full_match, var_name) ->
        subst = vars[var_name]
        if typeof subst != 'string' && typeof subst != 'number'
          throw new Error('Undefined variable ' + var_name)

        subst
      );
    else
      str
